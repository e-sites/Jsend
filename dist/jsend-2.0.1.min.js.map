{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/core.js","jsend-2.0.1.min.js","src/ajax.js","src/error.js","src/jsonp.js","src/merge.js","src/request.js","src/serialize.js","src/validate.js"],"names":["e","exports","module","define","amd","f","window","global","self","JSend","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"request","merge","defaults","type","data","timeout","headers","types","apis","options","config","forEach","method","func","this","./merge","./request",2,"error","ajax","callback","url","xhr","res","Content-Type","isLteIE8","test","navigator","userAgent","match","Number","eventName","toLowerCase","URL","location","hostname","port","XMLHttpRequest","XDomainRequest","open","setRequestHeader","h","hasOwnProperty","ontimeout","status","message","readyState","JSON","parse","responseText","send","./error",3,"checkError","msg",4,"jsonp","fname","Math","round","random","script","document","createElement","indexOf","callbacks","onerror","src","head","appendChild","response",5,"target","array","Array","isArray","dst","concat","push","Object","keys","key",6,"serialize","validate","modules","get","post","requestPromise","Promise","resolve","reject","./ajax","./jsonp","./serialize","./validate",7,"encodeURIComponent","tmp","TypeError","k","join",8,"validateRequest","isValidJsend"],"mappings":"CAAA,SAAAA,GAAA,GAAA,gBAAAC,UAAA,mBAAAC,QAAAA,OAAAD,QAAAD,QAAA,IAAA,kBAAAG,SAAAA,OAAAC,IAAAD,UAAAH,OAAA,CAAA,GAAAK,EAAA,oBAAAC,QAAAD,EAAAC,OAAA,mBAAAC,QAAAF,EAAAE,OAAA,mBAAAC,QAAAH,EAAAG,MAAAH,EAAAI,MAAAT,MAAA,WAAA,MAAA,SAAAA,GAAAU,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAT,GAAA,GAAAc,OAAA,uBAAAL,EAAA,IAAA,MAAAT,GAAAe,KAAA,mBAAAf,EAAA,GAAAgB,GAAAV,EAAAG,IAAAb,WAAAS,GAAAI,GAAA,GAAAQ,KAAAD,EAAApB,QAAA,SAAAD,GAAA,GAAAW,GAAAD,EAAAI,GAAA,GAAAd,EAAA,OAAAa,GAAAF,EAAAA,EAAAX,IAAAqB,EAAAA,EAAApB,QAAAD,EAAAU,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAb,QAAA,IAAA,GAAAiB,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAW,OAAAT,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAW,GAAA,SAAAP,EAAAf,EAAAD,ICYA,WACA,YAEA,IAAAQ,GAAA,WACA,GAAAgB,GAAAR,EAAA,aACAS,EAAAT,EAAA,WACAU,GACAC,KAAA,MACAC,KAAA,GACAC,QAAA,EACAC,YAEAC,GAAA,MAAA,OAAA,SACAC,IAsBA,OAnBAA,GAAAR,QAAA,SAAAS,GACA,GAAAC,GAAAT,EAAAC,EAAAO,EAEA,OAAAT,GAAAU,IAIAH,EAAAI,QAAA,SAAAC,GACA,GAAAC,GAAA,SAAAH,GACA,GAAAA,GAAAT,EAAAC,EAAAQ,EAIA,OAFAA,GAAAP,KAAAS,EAEAE,KAAAd,QAAAU,GAGAF,GAAAI,GAAAC,IAGAL,IAGA/B,GAAAD,QAAAQ,OCGG+B,UAAU,EAAEC,YAAY,IAAIC,GAAG,SAASzB,EAAQf,EAAOD,ICrD1D,WACA,YAEA,IAAAyB,GAAAT,EAAA,WACA0B,EAAA1B,EAAA,WAEA2B,EAAA,SAAAV,EAAAW,GACA,GAiBAC,GACAC,EACAC,EAnBArB,GACAG,QAAA,EACAC,SACAkB,eAAA,sCAGAC,EAAA,WACA,GAAAC,GAAAC,UAAAC,UAAAC,MAAA,gBAEA,OAAA,QAAAH,GAAAI,OAAAJ,EAAAA,EAAA5B,OAAA,KAAA,KAMAiC,EAAAN,EAAA,qBAAA,SACAf,EAAAT,EAAAC,EAAAO,GAIAJ,GAAA,CAEAK,GAAAP,KAAAO,EAAAP,KAAA6B,aAGA,KACAX,EAAA,GAAAY,KAAAvB,EAAAW,KAEA,MAAA9C,GACA8C,EAAAX,EAAAW,IAOAC,GAHAD,EAAAa,UAAArD,OAAAqD,SAAAC,WAAAd,EAAAc,UAAAtD,OAAAqD,SAAAE,OAAAf,EAAAe,MAAA,mBAAA,IAAAC,gBAGA,GAAAA,gBAFA,GAAAC,gBAMAhB,EAAAiB,KAAA7B,EAAAP,KAAAkB,GAGA,QAAAX,EAAAP,MACAmB,EAAAkB,iBAAA,eAAA,oCAIA,KAAA,GAAAC,KAAA/B,GAAAJ,QACAI,EAAAJ,QAAAoC,eAAAD,IACAnB,EAAAkB,iBAAAC,EAAA/B,EAAAJ,QAAAmC,GAKAnB,GAAAjB,QAAAK,EAAAL,QACAiB,EAAAqB,UAAA,WAEAtC,GAAA,EAGAkB,GACAqB,OAAA,QACAC,QAAA3B,EAAAI,EAAA,YAGAF,EAAAG,EAAAD,IAIAA,EAAAS,GAAA,WAEA,GAAA,IAAAT,EAAAwB,aAAAzC,EAAA,CAKA,IAAAiB,EAAAsB,SAAAtB,EAAAsB,OAAA,KAAAtB,EAAAsB,QAAA,MAAA,MAAAtB,EAAAsB,OAEArB,GACAqB,OAAA,QACAC,QAAA3B,EAAAI,QAIA,KACAC,EAAAwB,KAAAC,MAAA1B,EAAA2B,cAGA,MAAA1E,GACAgD,GACAqB,OAAA,QACAC,QAAA3B,EAAAI,EAAA/C,IAKA6C,EAAAG,EAAAD,KAIAA,EAAA4B,KAAAxC,EAAAN,MAGA3B,GAAAD,QAAA2C,ODyDGgC,UAAU,EAAEpC,UAAU,IAAIqC,GAAG,SAAS5D,EAAQf,EAAOD,IExKxD,WACA,YAEA,IAAA6E,GAAA,SAAA/B,EAAAJ,GAEA,GAAAoC,GAAA,GACApC,EAAAA,KAoBA,OAjBAoC,GADA,YAAApC,EACA,iBACAA,EAAAwB,eAAA,WACAxB,EAAA2B,QAAA,IACA,IAAAvB,EAAAsB,OACA,iCACA,MAAAtB,EAAAsB,OACA,qBACA,MAAAtB,EAAAsB,OACA,uBACA,MAAAtB,EAAAsB,OACA,uBACA,MAAAtB,EAAAsB,OACA,+BAEAtB,EAAA2B,aAAA,KAAA3B,EAAAsB,OAAA,KAMAnE,GAAAD,QAAA6E,UF2KME,GAAG,SAAS/D,EAAQf,EAAOD,IGxMjC,WACA,YAEA,IAAA+C,GAEAiC,EAAA,SAAA/C,EAAAW,GACA,GAAAqC,GAAA,QAAAC,KAAAC,MAAA,IAAAD,KAAAE,UACAC,EAAAC,SAAAC,cAAA,UACA1C,EAAA,KAAAZ,EAAAY,IAAA2C,QAAA,KAAAvD,EAAAY,IAAA,aAAAoC,EAAAhD,EAAAY,IAAA,6BAAAoC,CAEA5E,QAAAG,MAAAiF,UAAApF,OAAAG,MAAAiF,cAEAJ,EAAAK,QAAA,SAAA3F,GACA,UAAAA,EAAA4B,OACAoB,GACAqB,OAAA,QACAC,QAAA,wBAGAzB,EAAAG,KAIAsC,EAAAM,IAAA9C,EAEAyC,SAAAM,KAAAC,YAAAR,GAEAhF,OAAAG,MAAAiF,UAAAR,GAAA,SAAAa,GACAlD,EAAAkD,SAEAzF,QAAAG,MAAAiF,UAAAR,IAIAhF,GAAAD,QAAAgF,UH2MMe,GAAG,SAAS/E,EAAQf,EAAOD,II7OjC,WACA,YAGA,IAAAyB,GAAA,QAAAA,GAAAuE,EAAAL,GACA,GAAAM,GAAAC,MAAAC,QAAAR,GACAS,EAAAH,SAmCA,OAjCAA,IACAD,EAAAA,MACAI,EAAAA,EAAAC,OAAAL,GAEAL,EAAAxD,QAAA,SAAApC,EAAAkB,GACA,gBAAAlB,GACAqG,EAAAnF,GAAAQ,EAAAuE,EAAA/E,GAAAlB,GAEA,KAAAiG,EAAAR,QAAAzF,IACAqG,EAAAE,KAAAvG,OAKAiG,GAAA,gBAAAA,IACAO,OAAAC,KAAAR,GAAA7D,QAAA,SAAAsE,GACAL,EAAAK,GAAAT,EAAAS,KAGAF,OAAAC,KAAAb,GAAAxD,QAAA,SAAAsE,GACA,gBAAAd,GAAAc,IAAAd,EAAAc,IAIAT,EAAAS,GAGAL,EAAAK,GAAAhF,EAAAuE,EAAAS,GAAAd,EAAAc,IANAL,EAAAK,GAAAd,EAAAc,MAYAL,EAGAnG,GAAAD,QAAAyB,UJgPMiF,GAAG,SAAS1F,EAAQf,EAAOD,IK5RjC,WAGA,YAEA,IAQAwB,GARAmF,EAAA3F,EAAA,eACA4F,EAAA5F,EAAA,cACA2B,EAAA3B,EAAA,UACA6F,GACAC,IAAAnE,EACAoE,KAAApE,EACAqC,MAAAhE,EAAA,WAIAQ,GAAA,SAAAU,GACA,GAAA8E,EAIA,IAFA9E,EAAAP,KAAAO,EAAAP,KAAA6B,eAEAyD,QACA,KAAA,IAAA/F,OAAA,sDAqBA,OAjBAgB,GAAAN,KAAA,gBAAAM,GAAAN,KAAAM,EAAAN,KAAA+E,EAAAzE,EAAAN,MAGA,QAAAM,EAAAP,MAAA,UAAAO,EAAAP,OAAAO,EAAAN,OACAM,EAAAW,IAAA,KAAAX,EAAAW,IAAA2C,QAAA,KAAAtD,EAAAW,IAAA,IAAAX,EAAAN,KAAAM,EAAAW,IAAA,IAAAX,EAAAN,KAEAM,EAAAN,KAAA,MAIAoF,EAAA,GAAAC,SAAA,SAAAC,EAAAC,GACAN,EAAA3E,EAAAP,MAAAO,EAAA,SAAA4D,EAAAhD,GACA8D,EAAAd,EAAAhD,EAAAoE,EAAAC,QAQAlH,EAAAD,QAAAwB,OL+RG4F,SAAS,EAAEC,UAAU,EAAEC,cAAc,EAAEC,aAAa,IAAIC,GAAG,SAASxG,EAAQf,EAAOD,IM5UtF,WACA,YAEA,IAAA2G,GAAA,SAAA/E,GACA,GAAA7B,GAAA0H,mBACAC,IAEA,IAAA,gBAAA9F,GACA,KAAA,IAAA+F,WAAA,qCAGA,KAAA,GAAAC,KAAAhG,GACAA,EAAAsC,eAAA0D,IACAF,EAAApB,KAAAvG,EAAA6H,GAAA,IAAA7H,EAAA6B,EAAAgG,IAIA,OAAAF,GAAAG,KAAA,KAGA5H,GAAAD,QAAA2G,UN+UMmB,GAAG,SAAS9G,EAAQf,EAAOD,IOnWjC,WACA,YAEA,IACA+H,GADArF,EAAA1B,EAAA,WAGA+G,EAAA,SAAAjC,EAAAhD,EAAAoE,EAAAC,GACA,QAAAa,GAAAlC,GACA,GAAAA,GAAAA,EAAA5B,eAAA,UAAA,CACA,IAAA,YAAA4B,EAAA1B,QAAA,SAAA0B,EAAA1B,SAAA0B,EAAA5B,eAAA,QACA,OAAA,CAGA,IAAA,UAAA4B,EAAA1B,QAAA0B,EAAA5B,eAAA,WACA,OAAA,EAIA,OAAA,EAIA8D,EAAAlC,GAEA,YAAAA,EAAA1B,OACA8C,EAAApB,GAEAqB,EAAArB,IAGAA,GACA1B,OAAA,QACAC,QAAA3B,EAAAI,EAAAgD,IAGAqB,EAAArB,IAIA7F,GAAAD,QAAA+H,OPsWGpD,UAAU,SAAS,IAAI","file":"jsend-2.0.1.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/**\r\n * JSend is a native AJAX implementation that strictly handles JSend responses according to the non-official JSend spec.\r\n *\r\n * @class Constructor function that handles / validates JSON data according to the JSend spec.\r\n *\r\n * @see http://labs.omniti.com/labs/JSend\r\n *\r\n * @author   Iain van der Wiel <iain@e-sites.nl>\r\n * @version  2.0.0\r\n * @return   {Object} The JSend object\r\n**/\r\n\r\n(function () {\r\n\t'use strict';\r\n\r\n\tvar JSend = (function core() {\r\n\t\tvar request = require('./request'),\r\n\t\t\tmerge = require('./merge'),\r\n\t\t\tdefaults = {\r\n\t\t\t\ttype: 'get',\r\n\t\t\t\tdata: '',\r\n\t\t\t\ttimeout: 0,\r\n\t\t\t\theaders: {}\r\n\t\t\t},\r\n\t\t\ttypes = ['get', 'post', 'jsonp'],\r\n\t\t\tapis = {};\r\n\r\n\t\t// Base request API\r\n\t\tapis.request = function jsendRequest(options) {\r\n\t\t\tvar config = merge(defaults, options);\r\n\r\n\t\t\treturn request(config);\r\n\t\t};\r\n\r\n\t\t// Add aliases for each request type\r\n\t\ttypes.forEach(function (method) {\r\n\t\t\tvar func = function (config) {\r\n\t\t\t\tvar config = merge(defaults, config);\r\n\r\n\t\t\t\tconfig.type = method;\r\n\r\n\t\t\t\treturn this.request(config);\r\n\t\t\t};\r\n\r\n\t\t\tapis[method] = func;\r\n\t\t});\r\n\r\n\t\treturn apis;\r\n\t}());\r\n\r\n\tmodule.exports = JSend;\r\n}());","!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self&&(f=self),f.JSend=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n/**\r\n * JSend is a native AJAX implementation that strictly handles JSend responses according to the non-official JSend spec.\r\n *\r\n * @class Constructor function that handles / validates JSON data according to the JSend spec.\r\n *\r\n * @see http://labs.omniti.com/labs/JSend\r\n *\r\n * @author   Iain van der Wiel <iain@e-sites.nl>\r\n * @version  2.0.0\r\n * @return   {Object} The JSend object\r\n**/\r\n\r\n(function () {\r\n\t'use strict';\r\n\r\n\tvar JSend = (function core() {\r\n\t\tvar request = require('./request'),\r\n\t\t\tmerge = require('./merge'),\r\n\t\t\tdefaults = {\r\n\t\t\t\ttype: 'get',\r\n\t\t\t\tdata: '',\r\n\t\t\t\ttimeout: 0,\r\n\t\t\t\theaders: {}\r\n\t\t\t},\r\n\t\t\ttypes = ['get', 'post', 'jsonp'],\r\n\t\t\tapis = {};\r\n\r\n\t\t// Base request API\r\n\t\tapis.request = function jsendRequest(options) {\r\n\t\t\tvar config = merge(defaults, options);\r\n\r\n\t\t\treturn request(config);\r\n\t\t};\r\n\r\n\t\t// Add aliases for each request type\r\n\t\ttypes.forEach(function (method) {\r\n\t\t\tvar func = function (config) {\r\n\t\t\t\tvar config = merge(defaults, config);\r\n\r\n\t\t\t\tconfig.type = method;\r\n\r\n\t\t\t\treturn this.request(config);\r\n\t\t\t};\r\n\r\n\t\t\tapis[method] = func;\r\n\t\t});\r\n\r\n\t\treturn apis;\r\n\t}());\r\n\r\n\tmodule.exports = JSend;\r\n}());\n},{\"./merge\":5,\"./request\":6}],2:[function(require,module,exports){\n(function () {\r\n\t'use strict';\r\n\r\n\tvar merge = require('./merge'),\r\n\t\terror = require('./error');\r\n\r\n\tvar ajax = function ajax(options, callback) {\r\n\t\tvar defaults = {\r\n\t\t\t\ttimeout: 0,\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded'\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tisLteIE8 = (function isLteIE8() {\r\n\t\t\t\tvar test = navigator.userAgent.match(/MSIE (.{3}?);/);\r\n\r\n\t\t\t\tif ( test !== null && Number(test[test.length - 1]) <= 8 ) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn false;\r\n\t\t\t}()),\r\n\t\t\teventName = isLteIE8 ? 'onreadystatechange' : 'onload',\r\n\t\t\tconfig = merge(defaults, options),\r\n\t\t\turl,\r\n\t\t\txhr,\r\n\t\t\tres,\r\n\t\t\ttimeout = false;\r\n\r\n\t\tconfig.type = config.type.toLowerCase();\r\n\r\n\t\t// Try to create an URL to check if hostname and port are the same.\r\n\t\ttry {\r\n\t\t\turl = new URL(config.url);\r\n\t\t}\r\n\t\tcatch (e) {\r\n\t\t\turl = config.url;\r\n\t\t}\r\n\r\n\t\t// Check if url is cross-domain and set correct CORS XHR object\r\n\t\tif ( url.location && (window.location.hostname !== url.hostname || window.location.port !== url.port) && !('withCredentials' in new XMLHttpRequest()) ) {\r\n\t\t\txhr = new XDomainRequest();\r\n\t\t} else {\r\n\t\t\txhr = new XMLHttpRequest();\r\n\t\t}\r\n\r\n\t\t// Open request\r\n\t\txhr.open(config.type, url);\r\n\r\n\t\t// Force Content Type for IE\r\n\t\tif ( config.type === 'get' ) {\r\n\t\t\txhr.setRequestHeader('Content-Type', 'application/json; charset=\"utf-8\"');\r\n\t\t}\r\n\r\n\t\t// Set request headers\r\n\t\tfor (var h in config.headers) {\r\n\t\t\tif ( config.headers.hasOwnProperty(h) ) {\r\n\t\t\t\txhr.setRequestHeader(h, config.headers[h]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Handle XHR timeout\r\n\t\txhr.timeout = config.timeout;\r\n\t\txhr.ontimeout = function ajaxOnTimeout() {\r\n\t\t\t// Set timeout variable to prevent IE8 from executing onreadystatechange\r\n\t\t\ttimeout = true;\r\n\r\n\t\t\t// Generate error response\r\n\t\t\tres = {\r\n\t\t\t\tstatus: 'error',\r\n\t\t\t\tmessage: error(xhr, 'timeout')\r\n\t\t\t};\r\n\r\n\t\t\tcallback(res, xhr);\r\n\t\t};\r\n\r\n\t\t// Handle XHR request finished state (state 4)\r\n\t\txhr[eventName] = function ajaxOnLoad() {\r\n\t\t\t// Prevent execution if request isn't complete yet, or times out\r\n\t\t\tif (xhr.readyState !== 4 || timeout) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Check for HTTP error\r\n\t\t\tif ( (!xhr.status || (xhr.status < 200 || xhr.status >= 300) && xhr.status !== 304) ) {\r\n\t\t\t\t// HTTP status error\r\n\t\t\t\tres = {\r\n\t\t\t\t\tstatus: 'error',\r\n\t\t\t\t\tmessage: error(xhr)\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\t// No status error. Try parsing response...\r\n\t\t\t\ttry {\r\n\t\t\t\t\tres = JSON.parse(xhr.responseText);\r\n\t\t\t\t}\r\n\t\t\t\t// Parsing failed\r\n\t\t\t\tcatch (e) {\r\n\t\t\t\t\tres = {\r\n\t\t\t\t\t\tstatus: 'error',\r\n\t\t\t\t\t\tmessage: error(xhr, e)\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tcallback(res, xhr);\r\n\t\t};\r\n\r\n\t\t// Send request\r\n\t\txhr.send(config.data);\r\n\t};\r\n\r\n\tmodule.exports = ajax;\r\n}());\r\n\n},{\"./error\":3,\"./merge\":5}],3:[function(require,module,exports){\n(function () {\r\n\t'use strict';\r\n\r\n\tvar checkError = function checkError(xhr, error) {\r\n\t\t\r\n\t\tvar msg = '',\r\n\t\t\terror = error || {};\r\n\r\n\t\tif (error === 'timeout') {\r\n\t\t\tmsg = 'Timeout error.';\r\n\t\t} else if (error.hasOwnProperty('message')) {\r\n\t\t\tmsg = error.message + '.';\r\n\t\t} else if (xhr.status === 0) {\r\n\t\t\tmsg = 'Can\\'t connect. Verify network.';\r\n\t\t} else if (xhr.status === 400) {\r\n\t\t\tmsg = 'Bad Request [400].';\r\n\t\t} else if (xhr.status === 403) {\r\n\t\t\tmsg = 'URL Forbidden [403].';\r\n\t\t} else if (xhr.status === 404) {\r\n\t\t\tmsg = 'URL Not Found [404].';\r\n\t\t} else if (xhr.status === 500) {\r\n\t\t\tmsg = 'Internal Server Error [500].';\r\n\t\t} else {\r\n\t\t\tmsg = xhr.responseText + ' [' + xhr.status + '].';\r\n\t\t}\r\n\r\n\t\treturn msg;\r\n\t};\r\n\r\n\tmodule.exports = checkError;\r\n}());\n},{}],4:[function(require,module,exports){\n(function () {\r\n\t'use strict';\r\n\r\n\tvar res;\r\n\r\n\tvar jsonp = function jsonp(options, callback) {\r\n\t\tvar fname = 'jsend' + Math.round(Math.random() * 1000),\r\n\t\t\tscript = document.createElement('script'),\r\n\t\t\turl = options.url.indexOf('?') === -1 ? options.url + '?callback=' + fname : options.url + '&callback=JSend.callbacks.' + fname;\r\n\r\n\t\twindow.JSend.callbacks = window.JSend.callbacks || {};\r\n\r\n\t\tscript.onerror = function jsonpOnError (e) {\r\n\t\t\tif ( e.type === 'error' ) {\r\n\t\t\t\tres = {\r\n\t\t\t\t\tstatus: 'error',\r\n\t\t\t\t\tmessage: 'Error loading script'\r\n\t\t\t\t};\r\n\r\n\t\t\t\tcallback(res);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tscript.src = url;\r\n\r\n\t\tdocument.head.appendChild(script);\r\n\r\n\t\twindow.JSend.callbacks[fname] = function jsonpResponse(response) {\r\n\t\t\tcallback(response);\r\n\r\n\t\t\tdelete window.JSend.callbacks[fname];\r\n\t\t};\r\n\t};\r\n\r\n\tmodule.exports = jsonp;\r\n}());\n},{}],5:[function(require,module,exports){\n(function () {\r\n\t'use strict';\r\n\r\n\t// Function to deep merge arrays/objects\r\n\tvar merge = function merge(target, src) {\r\n\t\tvar array = Array.isArray(src),\r\n\t\t\tdst = array && [] || {};\r\n\r\n\t\tif (array) {\r\n\t\t\ttarget = target || [];\r\n\t\t\tdst = dst.concat(target);\r\n\r\n\t\t\tsrc.forEach(function(e, i) {\r\n\t\t\t\tif (typeof e === 'object') {\r\n\t\t\t\t\tdst[i] = merge(target[i], e);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (target.indexOf(e) === -1) {\r\n\t\t\t\t\t\tdst.push(e);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tif (target && typeof target === 'object') {\r\n\t\t\t\tObject.keys(target).forEach(function (key) {\r\n\t\t\t\t\tdst[key] = target[key];\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tObject.keys(src).forEach(function (key) {\r\n\t\t\t\tif (typeof src[key] !== 'object' || !src[key]) {\r\n\t\t\t\t\tdst[key] = src[key];\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (!target[key]) {\r\n\t\t\t\t\t\tdst[key] = src[key];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdst[key] = merge(target[key], src[key]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn dst;\r\n\t};\r\n\r\n\tmodule.exports = merge;\r\n}());\n},{}],6:[function(require,module,exports){\n(function () {\r\n\t/* global Promise */\r\n\r\n\t'use strict';\r\n\r\n\tvar serialize = require('./serialize'),\r\n\t\tvalidate = require('./validate'),\r\n\t\tajax = require('./ajax'),\r\n\t\tmodules = {\r\n\t\t\tget: ajax,\r\n\t\t\tpost: ajax,\r\n\t\t\tjsonp: require('./jsonp')\r\n\t\t},\r\n\t\trequest;\r\n\r\n\trequest = function request(config) {\r\n\t\tvar requestPromise;\r\n\r\n\t\tconfig.type = config.type.toLowerCase();\r\n\r\n\t\tif ( !Promise ) {\r\n\t\t\tthrow new Error('JSend requires `Promise`, please provide a polyfill');\r\n\t\t}\r\n\r\n\t\t// Encode the form data\r\n\t\tconfig.data = typeof config.data === 'string' ? config.data : serialize(config.data);\r\n\r\n\t\t// Generate GET url with data\r\n\t\tif ( (config.type === 'get' || config.type === 'jsonp') && config.data ) {\r\n\t\t\tconfig.url = config.url.indexOf('?') === -1 ? config.url + '?' + config.data : config.url + '&' + config.data;\r\n\r\n\t\t\tconfig.data = null;\r\n\t\t}\r\n\r\n\t\t// Setup request as a Promise\r\n\t\trequestPromise = new Promise(function handlePromise(resolve, reject) {\r\n\t\t\tmodules[config.type](config, function (response, xhr) {\r\n\t\t\t\tvalidate(response, xhr, resolve, reject);\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\t// Return the JSend request promise\r\n\t\treturn requestPromise;\r\n\t};\r\n\r\n\tmodule.exports = request;\r\n}());\n},{\"./ajax\":2,\"./jsonp\":4,\"./serialize\":7,\"./validate\":8}],7:[function(require,module,exports){\n(function() {\r\n\t'use strict';\r\n\r\n\tvar serialize = function serialize(data) {\r\n\t\tvar e = encodeURIComponent,\r\n\t\t\t\ttmp = [];\r\n\r\n\t\tif ( typeof data !== 'object' ) {\r\n\t\t\tthrow new TypeError('expected data to be of type object');\r\n\t\t}\r\n\r\n\t\tfor (var k in data) {\r\n\t\t\tif ( data.hasOwnProperty(k) ) {\r\n\t\t\t\ttmp.push( e(k) + '=' + e(data[k]) );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn tmp.join('&');\r\n\t};\r\n\r\n\tmodule.exports = serialize;\r\n}());\n},{}],8:[function(require,module,exports){\n(function () {\r\n\t'use strict';\r\n\r\n\tvar error = require('./error'),\r\n\t\tvalidateRequest;\r\n\r\n\tvar validateRequest = function validateRequest(response, xhr, resolve, reject) {\r\n\t\tfunction isValidJsend(response) {\r\n\t\t\tif ( response && response.hasOwnProperty('status') ) {\r\n\t\t\t\tif ( ( response.status === 'success' || response.status === 'fail' ) && response.hasOwnProperty('data') ) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if (response.status === 'error' && response.hasOwnProperty('message') ) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// validateRequest response as JSend\r\n\t\tif ( isValidJsend(response) ) {\r\n\t\t\t// Check JSend response status\r\n\t\t\tif ( response.status === 'success' ) {\r\n\t\t\t\tresolve(response);\r\n\t\t\t} else {\r\n\t\t\t\treject(response);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tresponse = {\r\n\t\t\t\tstatus: 'error',\r\n\t\t\t\tmessage: error(xhr, response)\r\n\t\t\t};\r\n\r\n\t\t\treject(response);\r\n\t\t}\r\n\t};\r\n\r\n\tmodule.exports = validateRequest;\r\n}());\n},{\"./error\":3}]},{},[1])(1)\n});\n\n","(function () {\r\n\t'use strict';\r\n\r\n\tvar merge = require('./merge'),\r\n\t\terror = require('./error');\r\n\r\n\tvar ajax = function ajax(options, callback) {\r\n\t\tvar defaults = {\r\n\t\t\t\ttimeout: 0,\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded'\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tisLteIE8 = (function isLteIE8() {\r\n\t\t\t\tvar test = navigator.userAgent.match(/MSIE (.{3}?);/);\r\n\r\n\t\t\t\tif ( test !== null && Number(test[test.length - 1]) <= 8 ) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn false;\r\n\t\t\t}()),\r\n\t\t\teventName = isLteIE8 ? 'onreadystatechange' : 'onload',\r\n\t\t\tconfig = merge(defaults, options),\r\n\t\t\turl,\r\n\t\t\txhr,\r\n\t\t\tres,\r\n\t\t\ttimeout = false;\r\n\r\n\t\tconfig.type = config.type.toLowerCase();\r\n\r\n\t\t// Try to create an URL to check if hostname and port are the same.\r\n\t\ttry {\r\n\t\t\turl = new URL(config.url);\r\n\t\t}\r\n\t\tcatch (e) {\r\n\t\t\turl = config.url;\r\n\t\t}\r\n\r\n\t\t// Check if url is cross-domain and set correct CORS XHR object\r\n\t\tif ( url.location && (window.location.hostname !== url.hostname || window.location.port !== url.port) && !('withCredentials' in new XMLHttpRequest()) ) {\r\n\t\t\txhr = new XDomainRequest();\r\n\t\t} else {\r\n\t\t\txhr = new XMLHttpRequest();\r\n\t\t}\r\n\r\n\t\t// Open request\r\n\t\txhr.open(config.type, url);\r\n\r\n\t\t// Force Content Type for IE\r\n\t\tif ( config.type === 'get' ) {\r\n\t\t\txhr.setRequestHeader('Content-Type', 'application/json; charset=\"utf-8\"');\r\n\t\t}\r\n\r\n\t\t// Set request headers\r\n\t\tfor (var h in config.headers) {\r\n\t\t\tif ( config.headers.hasOwnProperty(h) ) {\r\n\t\t\t\txhr.setRequestHeader(h, config.headers[h]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Handle XHR timeout\r\n\t\txhr.timeout = config.timeout;\r\n\t\txhr.ontimeout = function ajaxOnTimeout() {\r\n\t\t\t// Set timeout variable to prevent IE8 from executing onreadystatechange\r\n\t\t\ttimeout = true;\r\n\r\n\t\t\t// Generate error response\r\n\t\t\tres = {\r\n\t\t\t\tstatus: 'error',\r\n\t\t\t\tmessage: error(xhr, 'timeout')\r\n\t\t\t};\r\n\r\n\t\t\tcallback(res, xhr);\r\n\t\t};\r\n\r\n\t\t// Handle XHR request finished state (state 4)\r\n\t\txhr[eventName] = function ajaxOnLoad() {\r\n\t\t\t// Prevent execution if request isn't complete yet, or times out\r\n\t\t\tif (xhr.readyState !== 4 || timeout) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Check for HTTP error\r\n\t\t\tif ( (!xhr.status || (xhr.status < 200 || xhr.status >= 300) && xhr.status !== 304) ) {\r\n\t\t\t\t// HTTP status error\r\n\t\t\t\tres = {\r\n\t\t\t\t\tstatus: 'error',\r\n\t\t\t\t\tmessage: error(xhr)\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\t// No status error. Try parsing response...\r\n\t\t\t\ttry {\r\n\t\t\t\t\tres = JSON.parse(xhr.responseText);\r\n\t\t\t\t}\r\n\t\t\t\t// Parsing failed\r\n\t\t\t\tcatch (e) {\r\n\t\t\t\t\tres = {\r\n\t\t\t\t\t\tstatus: 'error',\r\n\t\t\t\t\t\tmessage: error(xhr, e)\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tcallback(res, xhr);\r\n\t\t};\r\n\r\n\t\t// Send request\r\n\t\txhr.send(config.data);\r\n\t};\r\n\r\n\tmodule.exports = ajax;\r\n}());\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tvar checkError = function checkError(xhr, error) {\r\n\t\t\r\n\t\tvar msg = '',\r\n\t\t\terror = error || {};\r\n\r\n\t\tif (error === 'timeout') {\r\n\t\t\tmsg = 'Timeout error.';\r\n\t\t} else if (error.hasOwnProperty('message')) {\r\n\t\t\tmsg = error.message + '.';\r\n\t\t} else if (xhr.status === 0) {\r\n\t\t\tmsg = 'Can\\'t connect. Verify network.';\r\n\t\t} else if (xhr.status === 400) {\r\n\t\t\tmsg = 'Bad Request [400].';\r\n\t\t} else if (xhr.status === 403) {\r\n\t\t\tmsg = 'URL Forbidden [403].';\r\n\t\t} else if (xhr.status === 404) {\r\n\t\t\tmsg = 'URL Not Found [404].';\r\n\t\t} else if (xhr.status === 500) {\r\n\t\t\tmsg = 'Internal Server Error [500].';\r\n\t\t} else {\r\n\t\t\tmsg = xhr.responseText + ' [' + xhr.status + '].';\r\n\t\t}\r\n\r\n\t\treturn msg;\r\n\t};\r\n\r\n\tmodule.exports = checkError;\r\n}());","(function () {\r\n\t'use strict';\r\n\r\n\tvar res;\r\n\r\n\tvar jsonp = function jsonp(options, callback) {\r\n\t\tvar fname = 'jsend' + Math.round(Math.random() * 1000),\r\n\t\t\tscript = document.createElement('script'),\r\n\t\t\turl = options.url.indexOf('?') === -1 ? options.url + '?callback=' + fname : options.url + '&callback=JSend.callbacks.' + fname;\r\n\r\n\t\twindow.JSend.callbacks = window.JSend.callbacks || {};\r\n\r\n\t\tscript.onerror = function jsonpOnError (e) {\r\n\t\t\tif ( e.type === 'error' ) {\r\n\t\t\t\tres = {\r\n\t\t\t\t\tstatus: 'error',\r\n\t\t\t\t\tmessage: 'Error loading script'\r\n\t\t\t\t};\r\n\r\n\t\t\t\tcallback(res);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tscript.src = url;\r\n\r\n\t\tdocument.head.appendChild(script);\r\n\r\n\t\twindow.JSend.callbacks[fname] = function jsonpResponse(response) {\r\n\t\t\tcallback(response);\r\n\r\n\t\t\tdelete window.JSend.callbacks[fname];\r\n\t\t};\r\n\t};\r\n\r\n\tmodule.exports = jsonp;\r\n}());","(function () {\r\n\t'use strict';\r\n\r\n\t// Function to deep merge arrays/objects\r\n\tvar merge = function merge(target, src) {\r\n\t\tvar array = Array.isArray(src),\r\n\t\t\tdst = array && [] || {};\r\n\r\n\t\tif (array) {\r\n\t\t\ttarget = target || [];\r\n\t\t\tdst = dst.concat(target);\r\n\r\n\t\t\tsrc.forEach(function(e, i) {\r\n\t\t\t\tif (typeof e === 'object') {\r\n\t\t\t\t\tdst[i] = merge(target[i], e);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (target.indexOf(e) === -1) {\r\n\t\t\t\t\t\tdst.push(e);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tif (target && typeof target === 'object') {\r\n\t\t\t\tObject.keys(target).forEach(function (key) {\r\n\t\t\t\t\tdst[key] = target[key];\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tObject.keys(src).forEach(function (key) {\r\n\t\t\t\tif (typeof src[key] !== 'object' || !src[key]) {\r\n\t\t\t\t\tdst[key] = src[key];\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (!target[key]) {\r\n\t\t\t\t\t\tdst[key] = src[key];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdst[key] = merge(target[key], src[key]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn dst;\r\n\t};\r\n\r\n\tmodule.exports = merge;\r\n}());","(function () {\r\n\t/* global Promise */\r\n\r\n\t'use strict';\r\n\r\n\tvar serialize = require('./serialize'),\r\n\t\tvalidate = require('./validate'),\r\n\t\tajax = require('./ajax'),\r\n\t\tmodules = {\r\n\t\t\tget: ajax,\r\n\t\t\tpost: ajax,\r\n\t\t\tjsonp: require('./jsonp')\r\n\t\t},\r\n\t\trequest;\r\n\r\n\trequest = function request(config) {\r\n\t\tvar requestPromise;\r\n\r\n\t\tconfig.type = config.type.toLowerCase();\r\n\r\n\t\tif ( !Promise ) {\r\n\t\t\tthrow new Error('JSend requires `Promise`, please provide a polyfill');\r\n\t\t}\r\n\r\n\t\t// Encode the form data\r\n\t\tconfig.data = typeof config.data === 'string' ? config.data : serialize(config.data);\r\n\r\n\t\t// Generate GET url with data\r\n\t\tif ( (config.type === 'get' || config.type === 'jsonp') && config.data ) {\r\n\t\t\tconfig.url = config.url.indexOf('?') === -1 ? config.url + '?' + config.data : config.url + '&' + config.data;\r\n\r\n\t\t\tconfig.data = null;\r\n\t\t}\r\n\r\n\t\t// Setup request as a Promise\r\n\t\trequestPromise = new Promise(function handlePromise(resolve, reject) {\r\n\t\t\tmodules[config.type](config, function (response, xhr) {\r\n\t\t\t\tvalidate(response, xhr, resolve, reject);\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\t// Return the JSend request promise\r\n\t\treturn requestPromise;\r\n\t};\r\n\r\n\tmodule.exports = request;\r\n}());","(function() {\r\n\t'use strict';\r\n\r\n\tvar serialize = function serialize(data) {\r\n\t\tvar e = encodeURIComponent,\r\n\t\t\t\ttmp = [];\r\n\r\n\t\tif ( typeof data !== 'object' ) {\r\n\t\t\tthrow new TypeError('expected data to be of type object');\r\n\t\t}\r\n\r\n\t\tfor (var k in data) {\r\n\t\t\tif ( data.hasOwnProperty(k) ) {\r\n\t\t\t\ttmp.push( e(k) + '=' + e(data[k]) );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn tmp.join('&');\r\n\t};\r\n\r\n\tmodule.exports = serialize;\r\n}());","(function () {\r\n\t'use strict';\r\n\r\n\tvar error = require('./error'),\r\n\t\tvalidateRequest;\r\n\r\n\tvar validateRequest = function validateRequest(response, xhr, resolve, reject) {\r\n\t\tfunction isValidJsend(response) {\r\n\t\t\tif ( response && response.hasOwnProperty('status') ) {\r\n\t\t\t\tif ( ( response.status === 'success' || response.status === 'fail' ) && response.hasOwnProperty('data') ) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if (response.status === 'error' && response.hasOwnProperty('message') ) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// validateRequest response as JSend\r\n\t\tif ( isValidJsend(response) ) {\r\n\t\t\t// Check JSend response status\r\n\t\t\tif ( response.status === 'success' ) {\r\n\t\t\t\tresolve(response);\r\n\t\t\t} else {\r\n\t\t\t\treject(response);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tresponse = {\r\n\t\t\t\tstatus: 'error',\r\n\t\t\t\tmessage: error(xhr, response)\r\n\t\t\t};\r\n\r\n\t\t\treject(response);\r\n\t\t}\r\n\t};\r\n\r\n\tmodule.exports = validateRequest;\r\n}());"],"sourceRoot":"/source/"}